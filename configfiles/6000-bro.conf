# Author: Justin Henderson
# Email: jhenderson@tekrefresh.comes
# Last Update: 5/10/2016
#
# This conf file is based on accepting logs for conn.log from Bro systems
filter {
  if "bro" in [tags] {

    date {
      match => [ "timestamp", "UNIX" ]
    }

    if [duration] == "-" {
      mutate {
        replace => [ "duration", "0" ]
      }
    }
    if [out_bytes] == "-" {
      mutate {
        replace => [ "out_bytes", "0" ]
      }
    }
    # If MissedBytes is unspecified set it to zero so it is an integer
    if [missed_bytes] == "-" {
      mutate {
        replace => [ "missed_bytes", "0" ]
      }
    }
    # If OriginalIPBytes is unspecified set it to zero so it is an integer
    if [out_ipbytes] == "-" {
      mutate {
        replace => [ "out_ipbytes", "0" ]
      }
    }
    # If RespondBytes is unspecified set it to zero so it is an integer
    if [in_bytes] == "-" {
      mutate {
        replace => [ "in_bytes", "0" ]
      }
    }
    # If RespondIPBytes is unspecified set it to zero so it is an integer
    if [in_ipbytes] == "-" {
      mutate {
        replace => [ "in_ipbytes", "0" ]
      }
    }
    if [source_port] == "-" {
      mutate {
        remove_field => ["source_port"]
      }
    }
    if [destination_port] == "-" {
      mutate {
        remove_field => ["destination_port"]
      }
    }
    if [virtual_host] == "-" {
      mutate {
        remove_field => ["virtual_host"]
      }
    }

    # I renamed conn_uids to uid so that it is easy to pivot to all things tied to a connection
    mutate {
       rename => [ "connection_uids", "uid" ]
    }
    # If total_bytes is set to "-" change it to 0 so it is an integer
    if [total_bytes] == "-" {
      mutate {
        replace => [ "total_bytes", "0" ]
      }
    }
    # If seen_bytes is set to "-" change it to 0 so it is an integer
    if [seen_bytes] == "-" {
      mutate {
        replace => [ "seen_bytes", "0" ]
      }
    }
    # If missing_bytes is set to "-" change it to 0 so it is an integer
    if [missing_bytes] == "-" {
      mutate {
        replace => [ "missing_bytes", "0" ]
      }
    }
    # If overflow_bytes is set to "-" change it to 0 so it is an integer
    if [overflow_bytes] == "-" {
      mutate {
        replace => [ "overflow_bytes", "0" ]
      }
    }

    # TODO: I think we can do this better in ES with a scripted field
    # Combine OriginalBytes and RespondBytes and save the value to total_bytes
    if [in_bytes] and [out_bytes] {
      ruby {
        code => "event['total_bytes'] = event['in_bytes'] + event['out_bytes']"
      }
    }

    # I recommend changing the field types below to integer or floats so searches can do greater than or less than
    # and also so math functions can be ran against them
    mutate {
      convert => [ "bound_port", "integer" ]
      convert => [ "data_channel_destination_port", "integer" ]
      convert => [ "destination_port", "integer" ]
      convert => [ "depth", "integer" ]
      convert => [ "duration", "float" ]
      convert => [ "info_code", "integer" ]
      convert => [ "missed_bytes", "integer" ]
      convert => [ "missing_bytes", "integer" ]
      convert => [ "n", "integer" ]
      convert => [ "in_bytes", "integer" ]
      convert => [ "in_packets", "integer" ]
      convert => [ "in_ipbytes", "integer" ]
      convert => [ "overflow_bytes", "integer" ]
      convert => [ "p", "integer" ]
      convert => [ "query_class", "integer" ]
      convert => [ "query_type", "integer" ]
      convert => [ "rcode", "integer" ]
      convert => [ "request_body_length", "integer" ]
      convert => [ "request_port", "integer" ]
      convert => [ "out_bytes", "integer" ]
      convert => [ "out_packets", "integer" ]
      convert => [ "out_ipbytes", "integer" ]
      convert => [ "response_body_length", "integer" ]
      convert => [ "seen_bytes", "integer" ]
      convert => [ "source_port", "integer" ]
      convert => [ "status_code", "integer" ]
      convert => [ "suppress_for", "float" ]
      convert => [ "total_bytes", "integer" ]
      convert => [ "trans_depth", "integer" ]
      convert => [ "transaction_id", "integer" ]
      lowercase => [ "query" ]
      remove => [ "timestamp" ]
    }
  }
}
