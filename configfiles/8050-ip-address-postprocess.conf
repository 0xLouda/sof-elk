# SOF-ELK Configuration File
# (C)2016 Lewes Technology Consulting, LLC
#
# This file contains transforms and enrichments to be applied in postprocessing


filter {
    if [source_ip] {
        geoip {
            database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
            source => "[source_ip]"
            target => "[source_geo]"
        }
        geoip {
            database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
            source => "[source_ip]"
            target => "[source_geo]"
        }
        mutate {
            add_field => {
                "ips" => [ "%{source_ip}" ]
            }
        }
    }
    if [source_geo][ip] {
        mutate {
            remove_field => [ "[source_geo][ip]" ]
        }
    }
    if [source_geo][number] and [source_geo][asn] {
        mutate {
            add_field => { "[source_geo][asnstr]" => "%{[source_geo][number]}: %{[source_geo][asn]}" }
        }
    }

    if [destination_ip] {
        geoip {
            database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
            source => "[destination_ip]"
            target => "[destination_geo]"
        }
        geoip {
            database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
            source => "[destination_ip]"
            target => "[destination_geo]"
        }
        mutate {
            add_field => {
                "ips" => [ "%{destination_ip}" ]
            }
        }
    }
    if [destination_geo][ip] {
        mutate {
            remove_field => [ "[destination_geo][ip]" ]
        }
    }
    if [destination_geo][number] and [destination_geo][asn] {
        mutate {
            add_field => { "[destination_geo][asnstr]" => "%{[destination_geo][number]}: %{[destination_geo][asn]}" }
        }
    }

    if [answer_ip] {
        geoip {
            database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
            source => "[answer_ip]"
            target => "[answer_geo]"
        }
        geoip {
            database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
            source => "[answer_ip]"
            target => "[answer_geo]"
        }
        mutate {
            add_field => {
                "ips" => [ "%{answer_ip}" ]
            }
        }
    }
    if [answer_geo][ip] {
        mutate {
            remove_field => [ "[answer_geo][ip]" ]
        }
    }
    if [answer_geo][number] and [answer_geo][asn] {
        mutate {
            add_field => { "[answer_geo][asnstr]" => "%{[answer_geo][number]}: %{[answer_geo][asn]}" }
        }
    }

    if [nf][ipv4_source_ip] {
        geoip {
            database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
            source => "[nf][ipv4_source_ip]"
            target => "[nf][ipv4_source_geo]"
        }
        geoip {
            database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
            source => "[nf][ipv4_source_ip]"
            target => "[nf][ipv4_source_geo]"
        }
        mutate {
            add_field => {
                "ips" => [ "%{[nf][ipv4_source_ip]}" ]
            }
        }
    }
    if [nf][ipv4_source_geo][ip] {
        mutate {
            remove_field => [ "[nf][ipv4_source_geo][ip]" ]
        }
    }
    if [nf][ipv4_source_geo][number] and [nf][ipv4_source_geo][asn] {
        mutate {
            add_field => { "[nf][ipv4_source_geo][asnstr]" => "%{[nf][ipv4_source_geo][number]}: %{[nf][ipv4_source_geo][asn]}" }
        }
    }
    if [nf][ipv4_source_geo][number] and [nf][source_as] == 0 {
        mutate {
            replace => [ "[nf][source_as]", "%{[nf][ipv4_source_geo][number]}" ]
        }
        mutate {
            gsub => [ "[nf][source_as]", "^AS", "" ]
        }
        mutate {
            convert => [ "[nf][source_as]", "integer" ]
        }
    }

    if [nf][ipv4_destination_ip] {
        geoip {
            database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
            source => "[nf][ipv4_destination_ip]"
            target => "[nf][ipv4_destination_geo]"
        }
        geoip {
            database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
            source => "[nf][ipv4_destination_ip]"
            target => "[nf][ipv4_destination_geo]"
        }
        mutate {
            add_field => {
                "ips" => [ "%{[nf][ipv4_destination_ip]}" ]
            }
        }
    }
    if [nf][ipv4_destination_geo][ip] {
        mutate {
            remove_field => [ "[nf][ipv4_destination_geo][ip]" ]
        }
    }
    if [nf][ipv4_destination_geo][number] and [nf][ipv4_destination_geo][asn] {
        mutate {
            add_field => { "[nf][ipv4_destination_geo][asnstr]" => "%{[nf][ipv4_destination_geo][number]}: %{[nf][ipv4_destination_geo][asn]}" }
        }
    }
    if [nf][ipv4_destination_geo][number] and [nf][destination_as] == 0 {
        mutate {
            replace => [ "[nf][destination_as]", "%{[nf][ipv4_destination_geo][number]}" ]
        }
        mutate {
            gsub => [ "[nf][destination_as]", "^AS", "" ]
        }
        mutate {
            convert => [ "[nf][destination_as]", "integer" ]
        }
    }
}