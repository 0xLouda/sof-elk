filter {
    # all other syslog messages
    if ([type] == "archive-syslog" or [type] == "syslog") and !("parse_done" in [tags]) {
        grok {
            patterns_dir => "/usr/local/sof-elk/grok-patterns"
            match => [ "message", "(?:\[%{BASE10NUM:ipt_uptime}\]%{SPACE})?%{IPTABLES}" ]
            add_tag => [ "got_iptables", "parse_done" ]
            tag_on_failure => [ "_defaultparse" ]
        }
        grok {
            patterns_dir => "/usr/local/sof-elk/grok-patterns"
            match => [ "message", "%{CISCO_ASA_MSG}" ]
            add_tag => [ "got_cisco", "parse_done" ]
            tag_on_failure => [ "_defaultparse" ]
        }
    }

    if "got_iptables" in [tags] and [ipt_srcip] {
        geoip {
            database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
            source => "[ipt_srcip]"
            target => "[ipt_srcgeo]"
        }
        geoip {
            database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
            source => "[ipt_srcip]"
            target => "[ipt_srcgeo]"
        }
        mutate {
            replace => [ "ips", "%{ips}%{ipt_srcip} %{ipt_dstip} " ]
        }
    }
    if [ipt_srcgeo][ip] {
        mutate {
            remove_field => [ "[ipt_srcgeo][ip]" ]
        }
    }
    if "got_iptables" in [tags] and [ipt_dstip] {
        geoip {
            database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
            source => "[ipt_dstip]"
            target => "[ipt_dstgeo]"
        }
        geoip {
            database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
            source => "[ipt_dstip]"
            target => "[ipt_dstgeo]"
        }
    }
    if [ipt_dstgeo][ip] {
        mutate {
            remove_field => [ "[ipt_dstgeo][ip]" ]
        }
    }
}
