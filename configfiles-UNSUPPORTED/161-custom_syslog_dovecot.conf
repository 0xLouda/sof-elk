filter {
    if ([type] == "archive-syslog" or [type] == "syslog") {
        if [syslog_program] =~ "dovecot" and [message] =~ "^imap-login: " {
            #imap-login: Login: user=<user@host.tld>, method=PLAIN, rip=1.2.3.4, lip=5.6.7.8, TLS
            #imap-login: Aborted login: rip=127.0.0.1, lip=127.0.0.1, TLS
            grok {
                match => [ "message", "^imap-login: %{DATA:imap_event}:(?: user=<%{NOTSPACE:imap_username}>,)?(?: method=%{WORD:imap_loginmethod},)? rip=%{IP:imap_remoteip}, lip=%{IP:imap_localip}" ]
                add_tag => [ "got_imap_event", "parse_done" ]
                tag_on_failure => [ "_gpfail_imapevent"]
            }

            if [imap_remoteip] {
                geoip {
                    database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
                    source => "[imap_remoteip]"
                    target => "[imap_remotegeo]"
                }
                geoip {
                    database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
                    source => "[imap_remoteip]"
                    target => "[imap_remotegeo]"
                }
            }
            if [imap_localip] {
                geoip {
                    database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
                    source => "[imap_localip]"
                    target => "[imap_localgeo]"
                }
                geoip {
                    database => "/usr/local/share/GeoIP/GeoLiteCity.dat"
                    source => "[imap_localip]"
                    target => "[imap_localgeo]"
                }
            }
            if [imap_remotegeo][ip] {
                mutate {
                    remove_field => [ "[imap_remotegeo][ip]" ]
                }
            }
            if [imap_localgeo][ip] {
                mutate {
                    remove_field => [ "[imap_localgeo][ip]" ]
                }
            }
        }

        if [syslog_program] =~ "dovecot" and [message] =~ "^IMAP\(" {
            #IMAP(user@host.tld): Disconnected: Logged out
            grok {
                match => [ "message", "^IMAP\(%{NOTSPACE:imap_username}\): %{GREEDYDATA:imap_event}" ]
                add_tag => [ "got_imap_event", "parse_done" ]
                tag_on_failure => [ "_gpfail_imapevent" ]
            }
        }
    }

    if "got_imap_event" in [tags] {
        if [imap_remoteip] {
            mutate {
                replace => [ "ips", "%{ips}%{imap_remoteip} " ]
            }
        }
        if [imap_localip] {
            mutate {
                replace => [ "ips", "%{ips}%{imap_localip} " ]
            }
        }
    }

    if "got_imap_event" in [tags] and "_gpfail_imapevent" in [tags] {
        mutate {
            remove_tag => [ "_gpfail_imapevent" ]
        }
    }
}