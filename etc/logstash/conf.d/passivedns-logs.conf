input {
    file {
        type => "passivedns"
        path => [ "/usr/local/logstash-passivedns/**/*" ]
        sincedb_path => "/var/db/logstash/sincedb"
        start_position => "beginning"
        exclude => [ "*.gz", "*.zip" ]
    }
}

filter {
    # passivedns records
    if [type] == "passivedns" {
        grok {
            patterns_dir => "/etc/logstash/patterns"
            match => [ "message", "%{UNIX_MSEC:unix_timestamp}[0-9]*\|\|%{IPORHOST:pdns_clientip}\|\|%{IPORHOST:pdns_serverip}\|\|%{WORD:pdns_rrclass}\|\|%{IPORHOST:pdns_query}\|\|%{WORD:pdns_querytype}\|\|%{IPORHOST:pdns_answer}\|\|%{INT:pdns_ttl}\|\|%{INT:pdns_rrcount}" ]
            add_tag => [ "got_passivedns", "parse_done" ]
            tag_on_failure => [ "_gpfail", "fail_pd01" ]
        }
    }

    if [type] == "passivedns" and "got_passivedns" in [tags] {
        mutate {
            add_field => {
                "syslog_program" => "passivedns"
                "syslog_hostname" => "0.0.0.0"
            }

            # remove trailing dots for both queries and answers
            gsub => [ "pdns_query", "\.$", "" ]
            gsub => [ "pdns_answer", "\.$", "" ]

            # remove the decimal point in the timestamp, so instead of sec.msec, we have msec
            gsub => [ "unix_timestamp", "\.", "" ]
        }

        date {
            match => [ "unix_timestamp", "UNIX_MS" ]
        }

        mutate {
            remove_field => [ "unix_timestamp" ]
            add_tag => [ "parse_done" ]
        }

        if [pdns_clientip] and [pdns_query] and [pdns_answer] {
            mutate {
            replace => [ "message", "DNS Request/Response: %{pdns_clientip} (%{pdns_query} -> %{pdns_answer})" ]
            }
        }
    }
}
